%YAML:1.0

# Camera calibration and distortion parameters (OpenCV)

Camera.fx: 155.93985260111538
Camera.fy: 177.7424247533103
Camera.cx: 325.55379286273217
Camera.cy: 241.8506195964024

Camera.k1: 0.03151196639318718
Camera.k2: -0.00954356480000671
Camera.p1: -1.813628394385411e-05
Camera.p2: -0.0003251651547740253
Camera.k3: 0.0

Camera.width: 644
Camera.height: 482

# Camera frames per second
Camera.fps: 20.833

# stereo baseline (distance between cameras in m?) times fx
Camera.bf: 21.63762205908515 # 40

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Close/Far threshold. Baseline times.
ThDepth: 30 # what is this?

# seen elsewhere... what is this?
#DepthMapFactor: 1000.0

#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
#--------------------------------------------------------------------------------------------
LEFT.height: 482
LEFT.width: 644
LEFT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [0.03151196639318718, -0.00954356480000671, -1.813628394385411e-05,-0.0003251651547740253,0]
LEFT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [176.17289, 0.0, 315.19013, 0.0, 175.95344, 244.11609, 0.0, 0.0, 1.0]
LEFT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.9973831096131968, 0.03650368466462995, 0.06240523747423305, -0.03594197910636696, 0.9993028358423939, -0.010100317582488949, -0.0627304295874629, 0.007830918417076923, 0.9979997845292942]
LEFT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [155.93985260111538, 8.899187816914408, 325.55379286273217, 0.0, -21.63762205908515, 177.7424247533103, 241.8506195964024, 0.0, -0.0627304295874629, 0.007830918417076923, 0.9979997845292942, 0.0]

RIGHT.height: 482
RIGHT.width: 644
RIGHT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [0.024357245891300634, -0.007723382250546576, -0.0038659547024494562,-0.0004634054290663293,0]
RIGHT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [173.41289, 0.0, 316.87481, 0.0, 173.04743, 252.29994, 0.0, 0.0, 1.0]
RIGHT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.9978179352962003, 0.06128269270602659, -0.024572333546627245, -0.061301202320455266, 0.9981193128048703, 0.0, 0.02452612067357167, 0.001506313590227508, 0.9996980546265324]
RIGHT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [180.8062016820222, 11.10452168183775, 312.5179717427875, 38.58596682226425, -4.420076743089928, 173.10202474268448, 252.22375920039084, 6.243382980747338e-17, 0.02452612067357167, 0.001506313590227508, 0.9996980546265324, 1.734723475976807e-18]

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7
